// Flexbox mixins
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// Typography mixins
@mixin heading-large {
  font-size: $font-size-xxxl;
  font-weight: 700;
  line-height: 1.2;
}

@mixin heading-medium {
  font-size: $font-size-xxl;
  font-weight: 700;
  line-height: 1.3;
}

@mixin heading-small {
  font-size: $font-size-xl;
  font-weight: 600;
  line-height: 1.4;
}

@mixin body-text {
  font-size: $font-size-md;
  line-height: 1.5;
}

@mixin small-text {
  font-size: $font-size-sm;
  line-height: 1.5;
}

// Responsive mixins
@mixin responsive($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: $breakpoint-xs) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (max-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: $breakpoint-xl) {
      @content;
    }
  }
}

// Button mixins
@mixin button-base {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  font-weight: 600;
  border-radius: $border-radius-md;
  transition: $transition-base;
  cursor: pointer;
  border: none;
  text-align: center;
  padding: 0.75rem 1.25rem;
}

@mixin button-primary {
  @include button-base;
  background-color: var(--primary-color);
  color: white;
  
  &:hover {
    background-color: darken(#4285F4, 10%);
  }
  
  &:active {
    transform: translateY(1px);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: var(--hover-color);
  color: var(--text-color);
  border: 1px solid var(--border-color);
  
  .dark-theme & {
    background-color: var(--dark-hover-color);
    color: var(--dark-text-color);
    border-color: var(--dark-border-color);
  }
  
  &:hover {
    background-color: darken(#f7fafc, 5%);
    
    .dark-theme & {
      background-color: lighten(#3a4a5e, 5%);
    }
  }
  
  &:active {
    transform: translateY(1px);
  }
}

// Card mixins
@mixin card {
  background-color: var(--card-bg-color);
  border-radius: $border-radius-lg;
  box-shadow: $box-shadow-md;
  padding: $spacing-lg;
  
  .dark-theme & {
    background-color: var(--dark-card-bg-color);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
  }
}

// Shadow mixins
@mixin shadow-sm {
  box-shadow: $box-shadow-sm;
}

@mixin shadow-md {
  box-shadow: $box-shadow-md;
}

@mixin shadow-lg {
  box-shadow: $box-shadow-lg;
}

// Animation mixins
@mixin fadeIn($duration: 0.3s) {
  animation: fadeIn $duration ease forwards;
  
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

@mixin slideIn($direction: 'up', $distance: 20px, $duration: 0.3s) {
  @if $direction == 'up' {
    animation: slideInUp $duration ease forwards;
    
    @keyframes slideInUp {
      from {
        opacity: 0;
        transform: translateY($distance);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
  } @else if $direction == 'down' {
    animation: slideInDown $duration ease forwards;
    
    @keyframes slideInDown {
      from {
        opacity: 0;
        transform: translateY(-$distance);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
  } @else if $direction == 'left' {
    animation: slideInLeft $duration ease forwards;
    
    @keyframes slideInLeft {
      from {
        opacity: 0;
        transform: translateX($distance);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }
  } @else if $direction == 'right' {
    animation: slideInRight $duration ease forwards;
    
    @keyframes slideInRight {
      from {
        opacity: 0;
        transform: translateX(-$distance);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }
  }
}

// Truncate text
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Multi-line text truncate
@mixin text-truncate-multiline($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
} 